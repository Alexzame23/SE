#include <stdio.h>
#include "xparameters.h"
#include "xil_cache.h"
#include "xgpio.h"
#include "gpio_header.h"
#include "teclado.h"
#include "rgb_leds.h"
int main () 
{
	Xil_ICacheEnable();
	Xil_DCacheEnable();
	print("---Entering main---\n\r");
	u32 baseaddr;
	int write_loop_index;
	int read_loop_index;
	int Index;
	while(1){

		baseaddr = (u32) baseaddr_p;

		xil_printf("******************************\n\r");
		xil_printf("* User Peripheral Self Test\n\r");
		xil_printf("******************************\n\n\r");

		/*
		 * Write to user logic slave module register(s) and read back
		 */
		xil_printf("User logic slave module test...\n\r");

		for (write_loop_index = 0 ; write_loop_index < 4; write_loop_index++)
			RGB_LEDS_mWriteReg (baseaddr, write_loop_index*4, (write_loop_index+1)*READ_WRITE_MUL_FACTOR);
		for (read_loop_index = 0 ; read_loop_index < 4; read_loop_index++)
			if ( RGB_LEDS_mReadReg (baseaddr, read_loop_index*4) != (read_loop_index+1)*READ_WRITE_MUL_FACTOR){
				xil_printf ("Error reading register value at address %x\n", (int)baseaddr + read_loop_index*4);
				//return XST_FAILURE;
			}

		xil_printf("   - slave register write/read passed\n\n\r");
	}

	{
		u32 TeclaOld;
		u32 DataRead;

		print(" ---Test para el keypad ---\n\r");
		xil_printf(" Pulse una tecla cualquiera \n\r");
		DataRead = TECLADO_mReadReg ( XPAR_TECLADO_0_S00_AXI_BASEADDR , 0);
		xil_printf (" Se ha leido %d del registro 0 del teclado \n\r" , DataRead );
		TECLADO_mWriteReg ( XPAR_TECLADO_0_S00_AXI_BASEADDR , 0 ,0);
		TeclaOld = DataRead ; /* Se escribe un 0 para borrar la última tecla leída */
		while (1) {
			if ( DataRead != TeclaOld ) {
				xil_printf (" Se ha leido %d del registro 0 del teclado \n\r" , DataRead );
				TeclaOld = DataRead ;
			}
			DataRead = TECLADO_mReadReg ( XPAR_TECLADO_0_S00_AXI_BASEADDR , 0);
			TECLADO_mWriteReg ( XPAR_TECLADO_0_S00_AXI_BASEADDR , 0 ,0); /* Se escribe un 0 para borrar la última tecla leída */
			for(int j = 0; j < 10000000; j++);
		}
	}
	return 0;
}
